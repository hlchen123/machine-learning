import pandas as pd
import numpy as np

train=pd.read_csv("/media/chen/DA3C1DDF3C1DB789/data_exercise/digit_recognizer/train.csv").values
test=pd.read_csv("/media/chen/DA3C1DDF3C1DB789/data_exercise/digit_recognizer/test.csv").values

import keras.layers.core as core
import keras.layers.convolutional as conv
import keras.models as models
import keras.utils.np_utils as kutils

train.shape

trainX=train[:,1:].reshape(train.shape[0],1,28,28)
trainX=trainX.astype(float)
trainX/=255

trainY=kutils.to_categorical(train[:,0])

nb_filters_1=32
nb_conv=5

cnn=models.Sequential()
cnn.add(conv.Convolution2D(nb_filters_1,nb_conv,nb_conv,input_shape=(1,28,28),activation="relu"))
cnn.add(conv.MaxPooling2D())
cnn.add(core.Dropout(0.25))



nb_classes=trainY.shape[1]
cnn.add(core.Flatten())
cnn.add(core.Dense(1024,activation="relu"))
cnn.add(core.Dropout(0.25))
cnn.add(core.Dense(nb_classes,activation="softmax"))
cnn.summary()
cnn.compile(loss="categorical_crossentropy",optimizer="adadelta")

trainX.shape

cnn.fit(trainX,trainY,batch_size=128,nb_epoch=1,show_accuracy=True,verbose=1)

testX=test.reshape(test.shape[0],1,28,28)
testX=testX.astype(float)
testX/=255.0

yPred=cnn.predict_classes(testX)

np.savetxt("/home/chen/Desktop/mnist_vggnet.csv",np.c_[range(1,len(yPred)+1),yPred],delimiter=',',header="ImageId,label",comments="",fmt="%d")
